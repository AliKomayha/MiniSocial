@model MiniSocial.Dtos.PostDto

@{
    var currentUserId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);
    bool isOwner = currentUserId == Model.UserId;
}

<div class="card mb-3" style="border-radius:18px; box-shadow:0 2px 8px rgba(0,0,0,0.04);">
    <div class="card-body pb-2">
        <div class="d-flex align-items-center mb-1">
            <a asp-controller="Profiles" asp-action="ViewProfile" asp-route-id="@Model.UserId">
            <img src="@(string.IsNullOrEmpty(@Model.Avatar)
                             ? Url.Content("~/images/default-avatar.png")
                             : @Model.Avatar)"
                 alt="Avatar"
                 class="rounded-circle me-3"
                 style="width:48px; height:48px; object-fit:cover; border:2px solid #e1e8ed;" />
            </a>
            <div>
                @* <span class="fw-bold" style="font-size:1.08rem;">@Model.DisplayName</span> *@
                <a asp-controller="Profiles" asp-action="ViewProfile" asp-route-id="@Model.UserId" class="fw-bold text-dark">@Model.DisplayName</a>
                <span class="text-muted ms-1" style="font-size:0.98rem;">@("@" + @Model.UserName)</span>
                <span class="text-muted ms-2" style="font-size:0.85rem;">· @Model.CreatedAt.ToString("g")</span>
            </div>

            @* Dropdown menu for owner *@
            
                @if (isOwner)
                {
                    <div class="ms-auto dropdown">
                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="postMenu-@Model.Id" data-bs-toggle="dropdown" aria-expanded="false">
                            ⋮
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="postMenu-@Model.Id">
                            <li>
                                <a class="dropdown-item" asp-controller="Posts" asp-action="Edit" asp-route-id="@Model.Id">
                                    Edit Post
                                </a>
                            </li>
                            <li>
                                <form asp-controller="Posts" asp-action="Delete" asp-route-id="@Model.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this post?');">
                                    <button type="submit" class="dropdown-item text-danger">Delete Post</button>
                                </form>
                            </li>
                        </ul>
                    </div>
                }
            
        </div>

            

       


        <div class="mb-2" style="font-size:1.08rem;">
            @Model.Text
        </div>

        @if (!string.IsNullOrEmpty(Model.ImagePath))
        {
            <div class="mb-2 text-center">
                <img src="@Model.ImagePath"
                     alt="Post Image"
                     class="img-fluid rounded"
                     style="max-width:500px; max-height:350px; object-fit:cover; border:1px solid #e1e8ed; cursor: pointer"
                     onclick="openImageModal('@Model.ImagePath')" 
                     />
            </div>
        }

        <div class="d-flex justify-content-start text-muted pt-1" style="font-size:1rem;">
            <button type="button" class="btn btn-link p-0 border-0 text-decoration-none text-danger like-btn"
                    data-post-id="@Model.Id">
                ❤️ <span class="like-count">@Model.LikeCount</span>
            </button>
            <a asp-action="Post" asp-controller="Feed" asp-route-id="@Model.Id" class="text-decoration-none text-dark">    
            <span class="ms-4">💬 @Model.CommentCount</span>
            </a>
        
        </div>
    </div>
</div>




<script>
   
        //like post
        document.addEventListener("click", function (e) {
            const btn = e.target.closest(".like-btn");
            if (!btn) return;

            e.preventDefault();

            const postId = btn.getAttribute("data-post-id");
            const countSpan = btn.querySelector(".like-count");

            btn.disabled = true;

            fetch(`/Posts/ToggleLike`, {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: `postId=${postId}`
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    countSpan.textContent = data.likeCount;
                }
                btn.disabled = false;
            })
            .catch(() => btn.disabled = false);
        });

</script>